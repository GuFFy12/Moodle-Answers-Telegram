generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id
  lastIp    String   @db.Inet
  answers   Answer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id       Int       @id
  name     String
  sections Section[]
}

model Section {
  id        Int      @id @default(autoincrement())
  sectionId Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  name      String
  modules   Module[]

  @@unique([courseId, sectionId])
}

model Module {
  id        Int        @id
  section   Section    @relation(fields: [sectionId], references: [id])
  sectionId Int
  name      String
  questions Question[]
}

model Question {
  id                         Int      @id @default(autoincrement())
  module                     Module   @relation(fields: [moduleId], references: [id])
  moduleId                   Int
  question                   String
  answerOptions              String[]
  question_answerOptions_md5 String   @db.Uuid
  answers                    Answer[]

  @@unique([moduleId, question_answerOptions_md5])
}

model Answer {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  percent    Float?   @db.Real
  answers    String[]
  createdAt  DateTime @default(now())
}

model Session {
  telegramId          String @id
  checkedModulesCount Int
}
